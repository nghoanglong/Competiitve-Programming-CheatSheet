Một bài toán được giải bằng tham lam:
Xây dựng giải pháp cho vấn đề bằng cách chọn ra giải pháp có vẻ tốt nhất tại thời điểm đó. Một giải thuật tham lam không sử dụng kết quả 
từ sub-problems hay nói cách khác nó đã phải xây dựng trước cấu trúc để đưa ra giải pháp tối ưu cục bộ để đạt được kết quả tối ưu toàn cục 
mà không cần sử dụng lại kết quả từ các sub-problems, đây là khác biệt giữa tham lam và qhd, cho nên khi ta nhìn vào problems coin change, 
nếu ta chỉ muốn quy đổi số tiền ra những đồng tiền có mệnh giá nhỏ hơn thì ta xây dựng giải pháp dựa trên tham lam đó là ưu tiên chọn các đồng
mệnh giá cao trước, nhưng nếu bài toán là tìm số đồng xu nhỏ nhất phải quy đổi thì ta bắt buộc phải dùng quy hoạch động vì mỗi lần chọn giải pháp 
cho problem hiện tại, ta đều phải nhìn về kết quả từ sub-problem trước

Ví dụ để có được 6 coins với data set = {4, 3, 1} thì dùng tham lam ta sẽ chọn đc 3 đồng 4, 1 và 1, nhưng để chọn được số đồng ít nhất ta sẽ phải dùng
qhđ và kết quả sẽ là 2 đồng {3, 3}. Qua ví dụ ta thấy được sự khác nhau giữa tham lam và qhđ, tham lam sử dụng kết quả mà nó cho là tốt nhất ở hiện tại
vì nó đã xây dựng được cấu trúc tối ưu cục bộ đó là chọn các đồng mệnh giá cao trước tiên rồi trừ xuống, nó dựa theo đó và cho là đó là kết quả tối ưu
toàn cục mà không nhìn lại các kết quả cũ còn qhđ đều phải dựa trên các sub-problems mà nó đã đạt được. Tóm lại, muốn sử dụng tham lam, ta phải xây 
dựng được giải pháp cho bài toán trước tiên nên nó ko đảm bảo tính chất tối ưu mà chỉ đảm bảo tính chất đúng, còn quy hoạch động dựa trên kết quả, 
từ đó chọn ra giải pháp vừa đúng và vừa tối ưu
